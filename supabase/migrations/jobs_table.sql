// Archivo temporal

-- Crear la tabla de trabajos para las empresas
CREATE TABLE IF NOT EXISTS public.jobs (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title TEXT NOT NULL,
    description TEXT NOT NULL,
    requirements TEXT[] NOT NULL DEFAULT '{}',
    location TEXT NOT NULL,
    salary TEXT,
    type TEXT NOT NULL,
    category TEXT NOT NULL,
    experience_level TEXT,
    skills_required TEXT[] NOT NULL DEFAULT '{}',
    application_url TEXT,
    application_email TEXT,
    is_remote BOOLEAN NOT NULL DEFAULT false,
    is_active BOOLEAN NOT NULL DEFAULT true,
    closing_date TIMESTAMP WITH TIME ZONE,
    benefits TEXT[] DEFAULT '{}',
    company_id UUID NOT NULL REFERENCES auth.users(id) ON DELETE CASCADE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT now() NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT now() NOT NULL
);

-- Añadir políticas RLS para la tabla de trabajos
ALTER TABLE public.jobs ENABLE ROW LEVEL SECURITY;

-- Política para permitir a todos ver trabajos activos
CREATE POLICY "Cualquiera puede ver trabajos activos" ON public.jobs
    FOR SELECT USING (is_active = true);

-- Política para permitir a las empresas ver sus propios trabajos (activos e inactivos)
CREATE POLICY "Las empresas pueden ver sus propios trabajos" ON public.jobs
    FOR SELECT USING (auth.uid() = company_id);

-- Política para permitir a las empresas insertar sus propios trabajos
CREATE POLICY "Las empresas pueden insertar sus propios trabajos" ON public.jobs
    FOR INSERT WITH CHECK (auth.uid() = company_id);

-- Política para permitir a las empresas actualizar sus propios trabajos
CREATE POLICY "Las empresas pueden actualizar sus propios trabajos" ON public.jobs
    FOR UPDATE USING (auth.uid() = company_id);

-- Política para permitir a las empresas eliminar sus propios trabajos
CREATE POLICY "Las empresas pueden eliminar sus propios trabajos" ON public.jobs
    FOR DELETE USING (auth.uid() = company_id);

-- Crear índices para mejorar el rendimiento
CREATE INDEX IF NOT EXISTS idx_jobs_company_id ON public.jobs(company_id);
CREATE INDEX IF NOT EXISTS idx_jobs_is_active ON public.jobs(is_active);
CREATE INDEX IF NOT EXISTS idx_jobs_category ON public.jobs(category);
CREATE INDEX IF NOT EXISTS idx_jobs_location ON public.jobs(location);

-- Modificar la tabla de aplicaciones para incluir el job_id como INTEGER
ALTER TABLE IF EXISTS public.job_applications
    ALTER COLUMN job_id TYPE BIGINT USING job_id::BIGINT;

-- Añadir restricción de clave foránea a job_applications si existe la tabla
DO $$
BEGIN
    IF EXISTS (SELECT FROM pg_tables WHERE schemaname = 'public' AND tablename = 'job_applications') THEN
        ALTER TABLE public.job_applications
        ADD CONSTRAINT fk_job_applications_job_id
        FOREIGN KEY (job_id)
        REFERENCES public.jobs(id)
        ON DELETE CASCADE;
    END IF;
END
$$;
